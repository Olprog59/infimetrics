version: '3.9'

services:
  infimetrics: # Nom de ton service d'application
    container_name: infimetrics
    build: . # Chemin vers le dossier contenant le Dockerfile de ton application
    ports:
      - "8080:${PORT}" # Mappage des ports (port_h√¥te:port_conteneur)
    depends_on:
      - postgresql
      - redis
    environment:
      DB_HOST: postgresql
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_DRIVER: ${DB_DRIVER}
      SSL_MODE: ${SSL_MODE}
      HOST: "0.0.0.0"
      PORT: ${PORT}
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - infimetrics
  postgresql:
    container_name: postgresql
    image: postgres:latest
    restart: unless-stopped
    networks:
      - infimetrics
    volumes:
      - pgdata:/var/lib/postgresql/data

    ports:
      - "5432:5432"

    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:latest
    restart: unless-stopped
    networks:
      - infimetrics
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}

volumes:
    pgdata:
      driver: local
    cache:
      driver: local

networks:
  infimetrics:
